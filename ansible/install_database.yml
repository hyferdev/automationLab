---
- name: Install Percona Server on all DB hosts
  hosts: dbservers
  roles:
    - role: percona

- name: Install Python MySQL library for Ansible modules
  hosts: dbservers
  become: yes
  tasks:
    - name: Install python3-pymysql
      ansible.builtin.apt:
        name: python3-pymysql
        state: present
        update_cache: yes

- name: Secure MySQL installation on all DB hosts
  hosts: dbservers
  vars_files:
    - vars/secrets.yml
  roles:
    - role: mysql_secure

- name: Configure the Primary DB Server (post-security)
  hosts: vm_private_a1
  become: yes
  vars_files:
    - vars/secrets.yml # Load encrypted variables
  vars:
    # Non-sensitive variables
    replication_user: "repl_user"
    test_db_name: "testdb"
    test_table_name: "widgets"
  tasks:
    - name: Remove anonymous users
      community.mysql.mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Disallow remote root login
      community.mysql.mysql_user:
        name: root
        host: '%'
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create test database and table
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        query:
          - "CREATE DATABASE IF NOT EXISTS `{{ test_db_name }}`"
          - "CREATE TABLE IF NOT EXISTS `{{ test_db_name }}`.`{{ test_table_name }}` (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)"

    - name: Create replication user
      community.mysql.mysql_user:
        name: "{{ replication_user }}"
        host: '%'
        password: "{{ replication_password }}"
        priv: "*.*:REPLICATION SLAVE"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

