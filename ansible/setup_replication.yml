---
- name: Configure Primary for Replication
  hosts: vm_private_a1
  become: yes
  vars_files:
    # Load encrypted variables
    - vars/secrets.yml
  tasks:
    - name: Ensure server-id is set on primary
      ansible.builtin.lineinfile:
        path: /etc/my.cnf
        regexp: '^server-id'
        line: 'server-id = 1'
        insertafter: '\[mysqld\]'
      notify: restart mysqld

    - name: Ensure binary logging is enabled
      ansible.builtin.lineinfile:
        path: /etc/my.cnf
        regexp: '^log-bin'
        line: 'log-bin = mysql-bin'
        insertafter: '\[mysqld\]'
      notify: restart mysqld

- name: Configure Replica and Start Replication
  hosts: vm_private_a2
  become: yes
  vars_files:
    # Load encrypted variables
    - vars/secrets.yml
  vars:
    # Non-sensitive variables
    replication_user: "repl_user"
    primary_host: "{{ hostvars['vm_private_a1'].ansible_host }}"
  handlers:
    - name: restart mysqld
      ansible.builtin.service:
        name: mysqld
        state: restarted

  tasks:
    - name: Ensure server-id is set on replica
      ansible.builtin.lineinfile:
        path: /etc/my.cnf
        regexp: '^server-id'
        line: 'server-id = 2'
        insertafter: '\[mysqld\]'
      notify: restart mysqld

    - name: Stop replication if it is running
      community.mysql.mysql_replication:
        mode: stopreplica
        login_user: root
        login_password: "{{ mysql_root_password }}"
      ignore_errors: yes

    - name: Clone data from primary
      community.mysql.mysql_replication:
        mode: clone
        login_user: root
        login_password: "{{ mysql_root_password }}"
        clone_from: "{{ replication_user }}@{{ primary_host }}:3306"
        clone_password: "{{ replication_password }}"

    - name: Configure replica with primary's info
      community.mysql.mysql_replication:
        mode: changeprimary
        primary_host: "{{ primary_host }}"
        primary_user: "{{ replication_user }}"
        primary_password: "{{ replication_password }}"
        primary_log_file: "mysql-bin.000001"
        primary_log_pos: 4
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Start replication
      community.mysql.mysql_replication:
        mode: startreplica
        login_user: root
        login_password: "{{ mysql_root_password }}"

