# .github/workflows/terraform-destroy.yml
# This workflow manually triggers a terraform destroy for a specified environment,
# deriving the environment from the selected branch.

name: 'Terraform Destroy'

on:
  # Allows you to run this workflow manually from the Actions tab for a specific branch
  workflow_dispatch:

env:
  TF_LOG: INFO
  AWS_REGION: 'us-east-1'
  TF_WORKING_DIR: 'terraform'
  TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
  # Set the workspace based on the branch name
  TF_WORKSPACE: ${{ github.ref_name == 'main' && 'automationLab-prod' || (github.ref_name == 'dev' && 'automationLab-dev' || 'automationLab-sandbox') }}

permissions:
  id-token: write
  contents: read

jobs:
  determine-environment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      tf_environment: ${{ steps.get_env.outputs.ENVIRONMENT_NAME }}
    steps:
      - name: Determine Environment from branch name
        id: get_env
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "ENVIRONMENT_NAME=prod" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            echo "ENVIRONMENT_NAME=dev" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "sandbox" ]; then
            echo "ENVIRONMENT_NAME=sandbox" >> $GITHUB_OUTPUT
          fi

  terraform-destroy:
    name: Terraform Destroy
    needs: determine-environment
    runs-on: ubuntu-latest
    # Use the GitHub Environment for any protection rules
    environment: ${{ needs.determine-environment.outputs.tf_environment }}
    # Only run if the environment was successfully determined
    if: needs.determine-environment.outputs.tf_environment != ''

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/automationLab-Github
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Destroy
        # Terraform Cloud will automatically load the correct variables for the workspace
        run: terraform destroy -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}
